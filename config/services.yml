# Learn more about services, parameters and containers at
# http://symfony.com/doc/current/book/service_container.html
services:
    _defaults:
        # automatically injects dependencies in your services
        autowire: true
        # automatically registers your services as commands, event subscribers, etc.
        autoconfigure: true
        # this means you cannot fetch services directly from the container via $container->get()
        # if you need to do this, you can override this setting on individual services
        public: false

    # Makes classes in src/AppBundle available to be used as services.
    # This creates a service per class whose id is the fully-qualified class name.
    AppBundle\:
         resource: '../src/AppBundle/*'
         # you can exclude directories or files
         # but if a service is unused, it's removed anyway
         exclude: '../src/AppBundle/{Model}'

    # Controllers are imported separately to make sure they're public
    # and have a tag that allows actions to type-hint services.
    AppBundle\Controller\:
        resource: '../src/AppBundle/Controller'
        public: true
        tags: ['controller.service_arguments']

    AppBundle\Repository\:
        resource: '../src/AppBundle/Repository/*'
        calls:
        - [setContainer, ["@service_container"]]

    app.monolog.processor.web:
        class: AppBundle\Monolog\WebProcessorMonolog
        arguments: ['@request_stack']
        tags:
            - { name: monolog.processor, method: processRecord }

    # These need to not be public, but they are, for now...
    app.automated_edits_helper:
        class: AppBundle\Helper\AutomatedEditsHelper
        arguments: ['@service_container']
        public: true
    app.i18n_helper:
        class: AppBundle\Helper\I18nHelper
        arguments: ['@service_container']
        public: true
    logger:
        alias: 'monolog.logger'
        public: true

    app.exception_listener:
        class: AppBundle\EventSubscriber\ExceptionListener
        arguments: ['@twig', '@logger', '%kernel.environment%']
        tags:
            - { name: kernel.event_listener, event: kernel.exception }

    # add more services, or override services that need manual wiring
    # AppBundle\Service\ExampleService:
    #     arguments:
    #         $someArgument: 'some_value'
