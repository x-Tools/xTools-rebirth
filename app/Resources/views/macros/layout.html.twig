{#
 # Generate a collapsible Bootstrap .panel with a heading
 # @param string title       - i18n message that is the title of the content block, shown in a header
 # @param string content     - raw content to show in the section body
 # @param string description - shown on the right in grayed text
 # @param string id          - id of the section, defaults to the title
 # @param bool   notranslate - don't translate the 'title'
 #}
{% macro content_block(title, content, description, id = null, notranslate = false, toggle = true) %}
    {% if id is null %}
        {% set id = title %}
    {% endif %}
    <section class="panel panel-default clearfix" id="{{ id }}">
        <header class="panel-heading col-lg-12">
            <h4>
                {% if notranslate %}
                    {{ title }}
                {% else %}
                    {{ msg(title) }}
                {% endif %}
                {% if toggle %}
                    <small class='xt-show'>[{{ msg('show') | lower }}]</small>
                    <small class='xt-hide'>[{{ msg('hide') | lower }}]</small>
                {% endif %}
                {% if description is defined %}
                    <span class='pull-right text-muted xt-panel-description'>{{ msgIfExists(description) }}</span>
                {% endif %}
            </h4>
        </header>
        <div class="panel-body col-lg-12">{{ content }}</div>
    </section>
{% endmacro %}

{#
 # Use standard heading that goes at the top of a tool that relates to a single user.
 # @param User user
 # @param Project project
 # @param string tool The current tool that is being used.
 # @param array Arguments to pass in with the Back link. If this is set,
 #   the link text will say 'See full statistics' instead of 'Back'.
 #}
{% macro userHeading(user, project, tool, args = {}) %}
    {% import 'macros/wiki.html.twig' as wiki %}
    <header class="panel-heading">
        <div class="text-center xt-heading-top">
            <a class="back-to-search" href="{{ path(tool ~ (args is not empty ? 'Result' : ''), {'project': project.domain}|merge(args)) }}">
                <span class="glyphicon glyphicon-chevron-left"></span>
                {% if args is not empty %}
                    {{ msg('see-full-statistics') }}
                {% else %}
                    {{ msg('back') }}
                {% endif %}
            </a>
            {{ wiki.userLink(user, project) }}
            <small>
                &bull;
                {{ project.domain }}
            </small>
        </div>
    </header>
{% endmacro %}

{% macro alert(style, text, textParams) %}
    <p class="alert alert-{{ style }} alert-dismissable xt-alert{% if style == 'danger' %} strong{% endif %}" role="alert">
        <button class="close" data-dismiss="alert" aria-label="Close">
            <span aria-hidden="true">&times;</span>
        </button>
        {{ msgIfExists(text, textParams) }}
    </p>
{% endmacro %}

{% macro downloadLink(path, params, types = ['wikitext', 'csv', 'json', 'png'], customOptions) %}
    <div class="btn-group download-dropdown dropdown">
        <button class="btn btn-default btn-sm dropdown-toggle" type="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
            <span class="glyphicon glyphicon-download-alt"></span>
            {{ msg('download-label') }}
            <span class="caret"></span>
        </button>
        <ul class="dropdown-menu dropdown-menu-right">
            {% for type in types %}
                <li>
                    <a target="_blank" class="download-link download-{{ type|lower }}" href="{{ path(path, params|merge({format: type})) }}">{{ msgIfExists(type) }}</a>
                </li>
            {% endfor %}
            {% if customOptions is defined %}
                {{ customOptions }}
            {% endif %}
        </ul>
    </div>
{% endmacro %}

{% macro contributionsNav(offset, length, pageSize = 50) %}
    <div class="contributions-nav clearfix">
        {% if offset > 0 %}
            <a href="#" class="pull-left contributions--prev">
                <span class="glyphicon glyphicon-arrow-{% if isRTL() %}right{% else %}left{% endif %}"></span>
                {{ msg('pager-newer-n', [pageSize])|capitalize_first }}
            </a>
        {% endif %}
        {% if length == pageSize %}
            <a href="#" class="pull-right contributions--next">
                {{ msg('pager-older-n', [pageSize])|capitalize_first }}
                <span class="glyphicon glyphicon-arrow-{% if isRTL() %}left{% else %}right{% endif %}"></span>
            </a>
        {% endif %}
    </div>
{% endmacro %}

{% macro contributions(project, revs, offset, pageSize = 50) %}
    {% from _self import contributionsNav as contributionsNav %}
    {% import 'macros/wiki.html.twig' as wiki %}

    {% if revs|length == 0 %}
        <div class="alert alert-info">
            {{ msg('no-contribs') }}
        </div>
    {% else %}
        {{ contributionsNav(offset, revs|length, pageSize) }}
        <table class="table table-bordered table-hover table-striped contributions-table">
            <thead>
                {% for key in ['page-title', 'date', 'links', 'size', 'edit-summary'] %}
                    <th>{{ msg(key)|capitalize_first }}</th>
                {% endfor %}
            </thead>
            <tbody>
                {% for edit in revs %}
                    <tr>
                        <td>{{ wiki.pageLinkRaw(edit.page.title(true), project) }}</td>
                        <td>{{ wiki.permaLink(edit) }}</td>
                        <td>
                            {{ wiki.diffLink(edit) }}
                            &middot;
                            {{ wiki.pageHistLinkRaw(edit.page.title(true), project) }}
                            {% if enabled('TopEdits') %}
                            &middot;
                            <a href="{{ path('TopEditsResult', { 'project': project.domain, 'username': edit.user.username, 'namespace': '', 'article': edit.page.title(true) }) }}">{{ msg('tool-topedits') }}</a>
                            {% endif %}
                        </td>
                        <td>
                            {{ edit.size|diff_format }}
                        </td>
                        <td>{{ edit.wikifiedComment(true)|raw }}</td>
                    </tr>
                {% endfor %}
            </tbody>
        </table>
        {{ contributionsNav(offset, revs|length, pageSize) }}
    {% endif %}
{% endmacro %}
