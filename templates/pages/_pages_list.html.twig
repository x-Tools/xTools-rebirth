{% import 'macros/layout.html.twig' as layout %}
{% import 'macros/wiki.html.twig' as wiki %}

{% set content %}
    {% if pages.getNumPages == 0 %}
        <div class="alert alert-info">
            {{ msg('no-result', [user.username]) }}
        </div>
    {% else %}
        {% if (pages.deleted == 'all' or pages.deleted == 'deleted') and pages.numDeleted > 0 %}
            <script>
                var wikiDomain = "{{ project.domain }}",
                    wikiApi = "{{ project.apiUrl }}";
            </script>
            <p>
                {{ msg('pages-recreated-desc', ["<span class='text-muted'>" ~ msg('recreated') ~ "</span>"]) }}
                {{ msg('pages-deleted-hover-desc', ["<span class='text-danger'>" ~ msg('deleted') ~ "</span>"]) }}
                {{ msg('pages-deleted-redirects') }}
            </p>
        {% endif %}

        {% for ns in pages.results|keys %}
            <h4 class="xt-show-hide--parent" id="{{ ns }}">
                {{ nsName(ns, project.namespaces) }}
                <small class='xt-show'>[{{ msg('show')|lower }}]</small>
                <small class='xt-hide'>[{{ msg('hide')|lower }}]</small>
            </h4>

            <table class="table table-bordered table-hover table-striped pages-table xt-show-hide--target">
                <thead><tr>
                    <th>#</th>
                    {% set columns = ['page-title', 'date', 'original-size'] %}
                    {% if pages.deleted != 'deleted' %}
                        {% set columns = columns|merge(['current-size']) %}
                    {% endif %}
                    {% if project.hasPageAssessments(ns) and pages.deleted != 'deleted' %}
                        {% set columns = columns|merge(['assessment']) %}
                    {% endif %}
                    {% for thKey in columns %}
                        <th>
                                <span class="sort-link sort-link--{{ thKey }}" data-column="{{ thKey }}">
                                    {{ msg(thKey)|ucfirst }}
                                    <span class="glyphicon glyphicon-sort"></span>
                                </span>
                        </th>
                    {% endfor %}
                    <th>{{ msg('links') }}</th>
                </tr></thead>
                <tbody>
                {% set index = 0 %}
                {% set maxRows = 50 %}
                {% for page in pages.results[ns] if not(multiNamspace) or (index < maxRows and multiNamspace) %}
                    {% set index = index + 1 %}
                    {% set pagename = titleWithNs(page.page_title, ns, project.namespaces) %}
                    <tr>
                        <td>{{ index|num_format }}</td>
                        <td class="sort-entry--page-title" data-value="{{ pagename }}">
                            {% if page.page_is_redirect %}
                                {{ wiki.pageLinkRaw(pagename, project, pagename, 'redirect=no') }}
                                <small class="text-muted">&middot; ({{ msg('redirect') }})</small>
                            {% else %}
                                {{ wiki.pageLinkRaw(pagename, project) }}
                            {% endif %}
                            {% if page.type == 'arc' %}
                                &middot;
                                <small class="text-danger deleted-page tooltipcss" data-page="{{ pagename }}" data-datetime="{{ page.raw_time }}">
                                    ({{ msg('deleted') }})
                                    <div class="tooltip-body">
                                        <em class="text-muted">{{ msg('loading') }}...</em>
                                    </div>
                                </small>
                                {% if page.recreated %}
                                    &middot; <small class="text-muted">({{ msg('recreated') }})</small>
                                {% endif %}
                            {% endif %}
                        </td>
                        <td class="sort-entry--date" data-value="{{ page.raw_time }}">
                            {% if page.type == 'arc' %}
                                {{ wiki.pageLinkRaw('Special:Undelete/' ~ pagename, project, page.human_time, 'timestamp=' ~ page.raw_time) }}
                            {% else %}
                                {{ wiki.permaLinkRaw(page.rev_id, project, page.human_time|date_format) }}
                            {% endif %}
                        </td>
                        <td class="sort-entry--original-size" data-value="{{ page.rev_len }}">
                            {{ page.rev_len|num_format }}
                        </td>
                        {% if pages.deleted != 'deleted' %}
                            <td class="sort-entry--current-size" data-value="{{ page.page_len }}">
                                {% if page.page_len is null %}
                                    {{ msg('na') }}
                                {% else %}
                                    {{ page.page_len|num_format }}
                                {% endif %}
                            </td>
                            {% if project.hasPageAssessments(ns) %}
                                <td class="sort-entry--assessment" data-value="{{ page.pa_class ? page.pa_class : 'Unknown' }}">
                                    {% if page.type == 'arc' %}
                                        {{ msg('na') }}
                                    {% else %}
                                        {% if page.badge is defined %}
                                            <img alt="{{ page.pa_class }}" src="{{ page.badge }}" class="assessment-badge" />
                                        {% endif %}
                                        {{ page.pa_class ? page.pa_class|ucfirst : msg('unknown') }}
                                    {% endif %}
                                </td>
                            {% endif %}
                        {% endif %}
                        <td>
                            {{ wiki.pageLogLinkRaw(pagename, project) }}
                            {% if page.type == 'rev' or page.recreated == 1 %}
                                &middot;
                                {{ wiki.pageHistLinkRaw(pagename, project) }}
                                {% if enabled('ArticleInfo') %}
                                    &middot;
                                    <a href="{{ path('ArticleInfoResult', { 'project': project.domain, 'page': pagename }) }}">{{ msg('tool-articleinfo') }}</a>
                                {% endif %}
                                {% if enabled('TopEdits') %}
                                    &middot;
                                    <a href="{{ path('TopEditsResultPage', { 'project': project.domain, 'username': user.username, 'namespace': ns, 'page': page.page_title }) }}">{{ msg('tool-topedits') }}</a>
                                {% endif %}
                                {% if isWMFLabs() %}
                                    &middot;
                                    <a target="_blank" href="https://tools.wmflabs.org/pageviews?project={{ project.domain }}&amp;pages={{ pagename|e('url') }}">
                                        {{ msg('pageviews') }}
                                    </a>
                                {% endif %}
                            {% endif %}
                        </td>
                    </tr>
                {% endfor %}
                {% if pages.counts[ns].count > maxRows and multiNamspace %}
                    <tr class="show-more-row">
                        <td></td>
                        <td colspan={{ columns|length + 1 }}>
                            <a href="{{ path('PagesResult', { 'project': project.domain, 'username': user.username, 'namespace': ns, 'redirects': pages.redirects }) }}">
                                {{ (pages.counts[ns].count - maxRows)|number_format }} {{ msg('num-others', [pages.counts[ns].count - maxRows]) }}
                            </a>
                        </td>
                    </tr>
                {% endif %}
                </tbody>
            </table>

            {##### PAGINATION #####}
            {% set numPages = (pages.getNumPages / pages.resultsPerPage)|round(0, 'ceil') %}
            {% if not(multiNamspace) and numPages > 1 %}
                {% set hasPrev = pages.offset - 1 >= 0 %}
                {% set hasNext = pages.offset + 1 < numPages %}
                {% set pathVars = {'project': project.domain, 'username': user.username, 'namespace': pages.namespace, 'redirects': pages.redirects} %}

                <nav aria-label="...">
                    <ul class="pagination xt-pagination">
                        <li{% if not(hasPrev) %} class="disabled"{% endif %}>
                            {% if hasPrev %}
                            <a href="{{ path('PagesResult', pathVars|merge({'offset': pages.offset - 1})) }}" aria-label="Previous">
                                {% endif %}
                                <span aria-hidden="true">&laquo;</span>
                                {% if hasPrev %}</a>{% endif %}
                        </li>
                        {% for page in 1..numPages %}
                            {% set active = pages.offset == loop.index0 %}
                            <li{% if active %} class="active"{% endif %}>
                                <a href="{{ path('PagesResult', pathVars|merge({'offset': loop.index0})) }}">
                                    {{ page }} {% if active %}<span class="sr-only">(current)</span>{% endif %}
                                </a>
                            </li>
                        {% endfor %}
                        <li{% if not(hasNext) %} class="disabled"{% endif %}>
                            {% if hasNext %}
                            <a href="{{ path('PagesResult', pathVars|merge({'offset': pages.offset + 1})) }}" aria-label="Next">
                                {% endif %}
                                <span aria-hidden="true">&raquo;</span>
                                {% if hasNext %}</a>{% endif %}
                        </li>
                    </ul>
                </nav>
            {% endif %}
        {% endfor %}
    {% endif %}
{% endset %}

{% set downloadLink %}
    {{ layout.downloadLink('PagesResult', {'project': project.domain, 'username': user.username, 'namespace': pages.namespace, 'redirects': pages.redirects, 'deleted': pages.deleted, 'start': pages.start, 'end': pages.end, 'offset': pages.offset}, ['wikitext', 'PagePile', 'csv', 'tsv'], 'UserApiPagesCreated') }}
{% endset %}
{{ layout.content_block('pages-created', content, downloadLink) }}
