{% extends is_sub_request ? 'subrequest.html.twig' : 'editCounter/subtool.html.twig' %}
{% import 'macros/wiki.html.twig' as wiki %}
{% import 'macros/layout.html.twig' as layout %}

{% block downloadLink %}
    {{ layout.downloadLink('EditCounterYearCounts', {project:project.domain, username:user.usernameIdent}, ['wikitext', 'csv']) }}
{% endblock %}

{% block ecBody %}

{% if ec.yearTotals|length > 0 %}
    <table class="sr-only">
        <thead>
            <tr>
                <th>{{ msg('year') }}</th>
                <th>{{ msg('count') }}</th>
                {% for ns in ec.yearCounts.totals|keys %}
                    <th>{{ nsName(ns, project.namespaces) }}</th>
                {% endfor %}
            </tr>
        </thead>
        <tbody>
            {% for year,namespaces in ec.yearCountsWithNamespaces %}
                <tr>
                    <td>{{ year }}</td>
                    <td>{{ ec.yearTotals[year]|num_format }}</td>
                    {% for _ns,count in namespaces %}
                        <td>{{ count|num_format }}</td>
                    {% endfor %}
                </tr>
            {% endfor %}
        </tbody>
    </table>

    {# Set height of chart based on how many years (horizontal rows) are being reported. #}
    <div style="position:relative; height:{{ (25 * ec.yearCounts.yearLabels|length) + 30 }}px">
        <canvas id="yearcounts-canvas"></canvas>
    </div>
    <script type="text/javascript">
        $(function() {
            /** @type {Array} To be passed into Chart.js */
            var datasets = [];

            /** @type {Array} The labels for the y-axis. */
            var labels = {{ ec.monthCounts.yearLabels|json_encode|raw }};

            /** @type {Number} Max value of the year totals */
            var maxTotal = 0;

            // Format data for use in charts.
            {% for nsId,namespaceData in ec.yearCounts.totals %}
                var dataset = {
                    label: "{{ nsName(nsId, project.namespaces) }}",
                    backgroundColor: "{{ color(nsId) }}",
                    data: []
                };

                {% for year,yearData in namespaceData %}
                    dataset.data.push({{ yearData }});

                    // Determine maximum value for the totals. This is needed
                    //   so that we know how much spacing to add in the labels.
                    if ({{ yearData }} > maxTotal) {
                        maxTotal = {{ yearData }};
                    }
                {%- endfor -%}

                datasets.push(dataset);
            {% endfor %}

            var showLegend = {% if is_sub_request %}false{% else %}true{% endif %};
            xtools.editcounter.setupMonthYearChart('year', datasets, labels, maxTotal, showLegend);
        });
    </script>
{% else %}
    <div class="alert alert-info">
        {{ msg('no-contribs') }}
    </div>
{% endif %}

{% endblock %}
