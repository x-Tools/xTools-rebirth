{% import 'macros/wiki.html.twig' as wiki %}
{% if not is_sub_request %}
== {{ wiki.userLinkWikitext(user, user.username) }} ==

{% set link %}[{{ url('TopEditsResultNamespace', {'username': user.usernameIdent, 'project': project.domain, 'namespace': 'all'}) }} {{ msg('xtools-title') }}]{% endset %}
{{ msg('xtools-advert', [link, date()|date('Y-m-d H:i')]) }}

{% endif %}
{% if not(project.userHasOptedIn(user)) %}
{{ wiki.userOptedOutWikitext(project, user) }}
{% else %}
=== {{ msg('topedits-per-namespace') }} ===

{% for ns, pages in te.topEdits %}
==== {{ nsName(ns, project.namespaces) }} ====

{% set showPageAssessment = ns == 0 and project.hasPageAssessments %}
{| class="wikitable sortable"
! {{ msg('edits')|ucfirst }}
! {{ msg('page-title') }}
{% if showPageAssessment %}
! {{ msg('assessment') }}
{% endif %}
! {{ msg('links') }}
{% for page in pages %}
|-
| {% verbatim %}{{FORMATNUM:{% endverbatim %}{{ page.count }}}}
| [[:{{ page.page_title_ns|replace({'_': ' '}) }}]]
{% if showPageAssessment %}
| {% set badge = project.pageAssessments.badgeURL(page.pa_class, true) -%}
{% if badge is defined %}
[[File:{{ badge }}|20px]] {{ page.pa_class ? page.pa_class : msg('unknown') }}
{% endif %}{% endif %}
| [{% verbatim %}{{{% endverbatim %}fullurl:Special:Log|page={{ page.page_title_ns|replace({' ': '_'}) }}}} {{ msg('log') }}] &middot; [{{ url('ArticleInfoResult', {project:project.domain, page:page.page_title_ns}) }} {{ msg('tool-articleinfo') }}] &middot; [{{ url('TopEditsResultPage', {project:project.domain, username:user.usernameIdent, namespace:page.namespace, page:page.page_title}) }} {{ msg('tool-topedits') }}]
{% endfor %}
{% if pages|length >= 10 and te.topEdits|length > 1 %}
|-
! colspan={{ showPageAssessment ? 4 : 3 }} | [{{ url('TopEditsResultNamespace', {project:project.domain, username:user.usernameIdent, namespace:ns}) }} {{ msg('more') }}&hellip;]
{% endif %}
|}

{% endfor %}
{% endif %}
